{"version":3,"sources":["helpers/axios-clients.js","helpers/async-types.ts","store/auth/types.ts","store/auth/reducer.ts","store/data/actions.js","store/data/services.local.js","store/data/reducer.js","store/plan-prise/services.api.js","store/plan-prise/actions.js","store/plan-prise/services.local.js","store/plan-prise/reducer.js","store/user/types.ts","store/user/reducer.ts","store/store.ts","components/app/Accueil.tsx","store/auth/services.local.ts","store/auth/actions.ts","components/auth/Authentification.tsx","components/auth/AuthGate.tsx","components/app/Navigation.tsx","components/generic/Skeleton.tsx","components/app/ProtectedRoute.tsx","components/app/Profile.tsx","store/user/actions.ts","helpers/PPRepository.helper.js","helpers/pdf.helper.js","components/plan-prise/PPInputGroup.jsx","components/plan-prise/PPCard.jsx","components/search/SearchMedicament.jsx","components/plan-prise/PPSettings.jsx","components/plan-prise/PPSelect.jsx","components/PlanPrise.jsx","components/App.tsx","serviceWorker.js","index.js"],"names":["BASE_URL","process","token","document","head","querySelector","console","error","client","axios","create","baseURL","responseType","headers","content","withCredentials","middlewareConfig","interceptors","request","getState","getSourceAction","get","Authorization","action","start","success","LOGIN","asyncTypes","LOGOUT","initialState","isError","isLoading","tokens","loginReducer","newState","type","authReducer","state","cloneDeep","startsWith","TYPES","doSetStatus","medicament","status","value","medicaments","medicamentsArray","isArray","forEach","key","findIndex","data","id","push","empty","set","dataReducer","performAddDetailsToState","details","performSaveModification","debounce","ppId","modifications","callback","a","url","window","php","routes","api","planprise","update","toast","notify","duration","position","axiosWithToken","put","then","response","planPrise","close","Error","statusText","pp_id","catch","log","performLoadList","index","performLoadDetails","doReset","history","doInit","reload","dispatch","stopLoading","message","toNumber","values","map","denomination","customData","custom_data","settings","custom_settings","DATA_TYPES","doUpdate","updateLine","input","child","multiple","parent","readOnly","lineId","loadedData","merge","currentState","customContent","uniqBy","concat","compact","reject","omit","list","planPriseReducer","uniqueId","checked","LOAD_USER","userReducer","rootReducer","combineReducers","auth","user","middlewares","thunk","axiosMiddleware","axiosClient","compose","applyMiddleware","createStore","Accueil","Button","STORAGE_KEYS","getValue","payload","decodedToken","jwt","decode","complete","decodeToken","Role","clientCredentials","client_id","client_secret","grant_type","scope","doLogin","username","password","START","method","localStorage","setItem","JSON","stringify","err","performStoreTokens","removeItem","doRestore","json","getItem","parse","undefined","performRestoreTokens","authenticate","Component","this","props","store","isValid","accessToken","access_token","Date","getTime","performValidation","hasToken","React","connector","connect","component","public","admin","name","Navbar","bg","className","expand","Brand","to","Toggle","aria-controls","Nav","Link","Skeleton","children","header","size","xl","Container","Row","Col","Card","Header","Body","cancelRedirect","SigninSchema","Yup","shape","signinEmail","email","required","signinPassword","mapDispatch","doLogout","reset","Authentification","redirect","redirectTo","includes","handleSignout","getTitle","role","signin","register","signout","getMessage","isMounted","setState","md","Alert","variant","initialValues","validationSchema","onSubmit","setSubmitting","login","errors","touched","handleChange","handleBlur","handleSubmit","Form","noValidate","Group","controlId","Label","Control","autoComplete","isInvalid","placeholder","onBlur","onChange","Feedback","Text","block","disabled","Spinner","animation","style","marginRight","Fragment","as","withRouter","authenticator","path","info","pathname","loadUser","useState","isEditing","setIsEditing","useEffect","keys","length","getButtons","property","onClick","sm","column","defaultValue","plaintext","display_name","PPItem","addedData","customValue","needChoice","custom_denomination","compositions","join","toLower","default","voies_administration","returnValue","item","customItemData","display","population","help","i","choose","PPRepository","getColumns","inputs","posologies","posologie","isChecked","isDefault","properties","label","poso","commentaires","init","valuesObject","line","lineObject","find","columns","needChoiceObject","isLoaded","object","mapValues","isString","text","stack","flatMap","e","pdfMake","vfs","pdfFonts","PPInput","autosize","textarea","stringValue","isObject","fontSize","ref","rows","event","target","PPInputBase","doUpdateLine","addCustomItem","otherProps","inputValue","inputVal","Check","FormCheck","Input","marginTop","PPCard","isOpened","removeLine","repository","classList","contains","whiteSpace","overflow","textOverflow","tabIndex","sectionKey","section","collapse","class","needChoiceInputs","doAddCustomItem","flush","doRemoveLine","SearchMedicament","loadOptions","axiosSourceOptions","cancel","CancelToken","source","all","search","cancelToken","params","query","thrown","isCancel","handleSelect","inputValues","onSelect","setValue","prevState","select","leading","defaultOptions","colors","primary","getComputedStyle","backgroundColor","decompose","exec","primary50","primary75","primary25","cacheOptions","isMulti","loadingMessage","constant","menuPlacement","noOptionsMessage","theme","updateSettings","doUpdateSettings","setShowSettings","showSettings","Modal","show","onHide","closeButton","Title","chunk","ceil","c","PPSelect","_handleSelect","preventDefault","maxHeight","lineMax","lineHeight","PlanPrise","load","loadList","match","routeId","deletePP","setLoading","delete","destroy","handleAddLine","addLine","generatePDF","pageSize","pageOrientation","pageMargins","margin","footer","currentPage","pageCount","alignment","toString","table","layout","headerRows","dontBreakRows","body","widths","defaultStyle","fillOpacity","styles","bold","color","tableHeader","interline","italics","fromPairs","filter","col","fillColor","createPdf","open","generate","count","href","TransitionGroup","enter","CSSTransition","classNames","timeout","doAddLine","post","location","doLoad","doSetLoading","App","basename","exact","Boolean","hostname","getElementById","root","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.951fb9ba.chunk.js","sourcesContent":["import axios from \"axios\";\nimport get from \"lodash/get\";\n\nconst BASE_URL = `http://${process.env.REACT_APP_APP_URL}${process.env.REACT_APP_API_PATH}`;\n\nconst token = document.head.querySelector('meta[name=\"csrf-token\"]');\nif (!token) {\n  console.error(\n    \"CSRF token not found: https://laravel.com/docs/csrf#csrf-x-csrf-token\"\n  );\n}\n\nconst client = axios.create({\n  baseURL: BASE_URL,\n  responseType: \"json\",\n  headers: {\n    \"X-Requested-With\": \"XMLHttpRequest\",\n    \"X-CSRF-TOKEN\": token.content,\n  },\n  withCredentials: true,\n});\n\nexport default client;\n\nexport const middlewareConfig = {\n  interceptors: {\n    request: [\n      ({ getState, getSourceAction }, request) => {\n        const needAuth = get(getSourceAction(request), \"auth\");\n        if (needAuth) {\n          const token = get(getState(), \"auth.tokens.access_token\");\n          request.headers.Authorization = `Bearer ${token}`;\n        }\n        return request;\n      },\n    ],\n  },\n};\n","export type ValueOf<T> = T[keyof T];\n\nexport default (action: string): AsyncObjectType => ({\n  start: `${action}`,\n  success: `${action}_SUCCESS`,\n  error: `${action}_FAIL`,\n});\n\nexport type AsyncObjectType = {\n  start: string;\n  success: string;\n  error: string;\n};\n\nexport interface AsyncActionInterface {\n  type: any;\n  payload: {\n    request: {\n      url: string;\n    };\n  };\n  auth?: boolean;\n}\n\nexport interface AxiosSuccess {\n  type: string;\n  payload: {\n    status: number;\n    data: any;\n    headers?: any;\n  };\n  meta: {\n    previousAction: any;\n  };\n}\n\nexport interface AxiosError {\n  type: string;\n  error: {\n    status: number;\n    message: string;\n  };\n  meta: {\n    previousAction: any;\n  };\n}\n\nexport type AxiosResponse = AxiosSuccess | AxiosError;\n","import asyncTypes, {\n  AsyncActionInterface,\n  AsyncObjectType,\n  ValueOf,\n} from 'helpers/async-types';\n\nexport interface UserCredentials {\n  username: string;\n  password: string;\n}\n\nexport interface Tokens {\n  token_type: string;\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n}\n\nexport interface AuthState {\n  isError: boolean;\n  isLoading: boolean;\n  tokens: Tokens | null;\n}\n\nexport const LOGIN: AsyncObjectType = asyncTypes('LOGIN');\ntype LOGIN_TYPE = ValueOf<typeof LOGIN>;\nexport const LOGOUT: AsyncObjectType = asyncTypes('LOGOUT');\ntype LOGOUT_TYPE = ValueOf<typeof LOGOUT>;\nexport const RESET = 'RESET';\ntype RESET_TYPE = string;\nexport const LOGIN_RESTORE = 'LOGIN_RESTORE';\ntype LOGIN_RESTORE_TYPE = string;\n\ninterface AuthLoginAction extends AsyncActionInterface {\n  type: LOGIN_TYPE;\n}\n\ninterface AuthRestoreTokensAction {\n  type: LOGIN_RESTORE_TYPE;\n  tokens: Tokens;\n}\n\ninterface AuthLogoutAction extends AsyncActionInterface {\n  type: LOGOUT_TYPE;\n}\n\ninterface AuthResetAction {\n  type: RESET_TYPE;\n}\n\nexport type AuthActions =\n  | AuthLoginAction\n  | AuthLogoutAction\n  | AuthRestoreTokensAction\n  | AuthResetAction;\n","import cloneDeep from 'lodash/cloneDeep';\nimport startsWith from 'lodash/startsWith';\n\nimport { AuthState, AuthActions, LOGIN, LOGIN_RESTORE, RESET } from './types';\nimport { AxiosResponse } from 'helpers/async-types';\nimport get from 'lodash/get';\n\nconst initialState: AuthState = {\n  isError: false,\n  isLoading: false,\n  tokens: null,\n};\n\nconst loginReducer = (\n  newState: AuthState,\n  action: AuthActions | AxiosResponse\n): AuthState => {\n  switch (action.type) {\n    case LOGIN.start:\n      return {\n        ...newState,\n        isLoading: true,\n        isError: false,\n      };\n    case LOGIN.success:\n      if (get(action, 'payload.status') !== 200) return initialState;\n      return {\n        ...newState,\n        tokens: get(action, 'payload.data'),\n        isLoading: false,\n      };\n    case LOGIN.error:\n      return { ...initialState, isError: true };\n    case LOGIN_RESTORE:\n      return {\n        ...newState,\n        tokens: action.tokens,\n      };\n    default:\n      return initialState;\n  }\n};\n\nconst authReducer = (state = initialState, action: AuthActions): AuthState => {\n  const newState = cloneDeep(state);\n  if (startsWith(action.type, LOGIN.start))\n    return loginReducer(newState, action);\n  switch (action.type) {\n    case RESET:\n      return initialState;\n    default:\n      return newState;\n  }\n};\n\nexport default authReducer;\n","import axiosWithToken from \"helpers/axios-clients\";\n\nexport const TYPES = {\n  CACHE_DETAILS: \"CACHE_DETAILS\",\n  LOAD_DETAILS: \"LOAD_DETAILS\",\n  SET_STATUS: \"SET_STATUS\",\n};\n\nexport const doCacheDetails = (details) => {\n  return {\n    type: TYPES.CACHE_DETAILS,\n    details,\n  };\n};\n\nexport const doSetStatus = (medicament, status, value) => {\n  return {\n    type: TYPES.SET_STATUS,\n    medicament,\n    status,\n    value,\n  };\n};\n\nexport const doLoad = (medicament) => async (dispatch) => {\n  dispatch(doSetStatus(medicament, \"isLoading\", true));\n  return axiosWithToken()\n    .post(window.php.routes.api.all.show, {\n      id: medicament.id,\n      type: medicament.type,\n    })\n    .then((response) => {\n      if (!response.status === 200) throw new Error(response.statusText);\n      dispatch(doCacheDetails(response.data));\n      dispatch(doSetStatus(medicament, \"isLoading\", false));\n      return true;\n    })\n    .catch((error) => {\n      console.log(error);\n      return document.location.reload();\n    });\n};\n","import isArray from 'lodash/isArray';\nimport findIndex from 'lodash/findIndex';\nimport forEach from 'lodash/forEach';\nimport set from 'lodash/set';\n\nexport default (state, medicaments) => {\n  const medicamentsArray = isArray(medicaments)\n    ? medicaments\n    : [medicaments];\n\n  forEach(medicamentsArray, (medicament) => {\n    // const medicament = { ...medicament, ...medicament.value };\n    const key = findIndex(state.data, {\n      id: medicament.value.id,\n      type: medicament.type,\n    });\n\n    if (key === -1) {\n      state.data.push({\n        ...state.empty,\n        ...medicament.value, // id + denomination\n        type: medicament.type,\n        data: medicament.data,\n      });\n    } else {\n      set(state, `data.${key}.data`, medicament.data);\n    }\n  });\n\n  return state;\n};\n","import cloneDeep from 'lodash/cloneDeep';\nimport findIndex from 'lodash/findIndex';\nimport set from 'lodash/set';\nimport { TYPES } from './actions';\nimport performAddDetailsToState from './services.local';\n\nconst initialState = {\n  empty: {\n    state: {\n      isLoading: false,\n    },\n    data: null,\n  },\n  data: [],\n};\n\nconst dataReducer = (state = initialState, action) => {\n  const newState = cloneDeep(state);\n  switch (action.type) {\n    case TYPES.CACHE_DETAILS: {\n      return performAddDetailsToState(newState, action.details);\n    }\n    case TYPES.SET_STATUS: {\n      const key = findIndex(newState.data, {\n        id: action.medicament.id,\n        type: action.medicament.type,\n      });\n      if (key === -1) {\n        newState.data.push({\n          ...newState.empty,\n          state: {\n            ...newState.empty.state,\n            [action.status]: action.value,\n          },\n          ...action.medicament,\n        });\n        return newState;\n      }\n      return set(\n        newState,\n        `data.${key}.state.${action.status}`,\n        action.value,\n      );\n    }\n    default:\n      return newState;\n  }\n};\n\nexport default dataReducer;\n","import debounce from \"lodash/debounce\";\nimport get from \"lodash/get\";\nimport set from \"lodash/set\";\nimport toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\n\nimport axiosWithToken from \"helpers/axios-clients\";\n\nexport const performSaveModification = () => {\n  debounce(async (ppId, action, modifications, callback) => {\n    const url = `${window.php.routes.api.planprise.update}/${ppId}`;\n    if (get(window, \"planPrise.toast\", null) === null) {\n      set(\n        window,\n        \"planPrise.toast\",\n        toast.notify(\"Sauvegarde automatique\", {\n          duration: null,\n          position: \"top-right\",\n        })\n      );\n    }\n    return axiosWithToken()\n      .put(url, {\n        action,\n        value: modifications,\n      })\n      .then((response) => {\n        if (window.planPrise.toast) {\n          toast.close(\n            window.planPrise.toast.id,\n            window.planPrise.toast.position\n          );\n        }\n        window.planPrise.toast = null;\n        if (!response.status === 200) throw new Error(response.statusText);\n        return callback ? callback(response.data.pp_id) : true;\n      })\n      .catch((error) => {\n        if (window.planPrise.toast) {\n          toast.close(\n            window.planPrise.toast.id,\n            window.planPrise.toast.position\n          );\n        }\n        window.planPrise.toast = null;\n        console.log(error);\n      });\n  }, 5000);\n};\n\nexport const performLoadList = async () => {\n  return axiosWithToken()\n    .get(window.php.routes.api.planprise.index)\n    .then((response) => {\n      if (!response.status === 200) throw new Error(response.statusText);\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n      throw new Error(error);\n    });\n};\n\nexport const performLoadDetails = async (id) => {\n  return axiosWithToken()\n    .get(`${window.php.routes.api.planprise.index}/${id}`)\n    .then((response) => {\n      if (!response.status === 200) throw new Error(response.statusText);\n      return response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n      throw new Error(error);\n    });\n};\n","import isArray from 'lodash/isArray';\nimport map from 'lodash/map';\nimport toNumber from 'lodash/toNumber';\nimport {\n  performLoadDetails,\n  performLoadList,\n  performSaveModification,\n} from './services.api';\nimport { TYPES as DATA_TYPES } from '../data/actions';\n\nexport const TYPES = {\n  SET_DEFAULTS: 'SET_DEFAULTS',\n  SET_LOADING: 'SET_LOADING',\n  INIT: 'INIT',\n  RESET: 'RESET',\n  UPDATE: 'UPDATE',\n  UPDATE_LINE: 'UPDATE_LINE',\n  LOAD_LINE: 'LOAD_LINE', // thunk\n  LOAD_RESULT: 'LOAD_RESULT',\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\n  LOAD_LIST: 'LOAD_LIST',\n  LOAD_DETAILS: 'LOAD_DETAILS',\n  ADD_CUSTOM_ITEM: 'ADD_CUSTOM_ITEM',\n};\n\nexport const doSetLoading = (values) => {\n  return {\n    type: TYPES.SET_LOADING,\n    values,\n  };\n};\n\nexport const doReset = (history) => {\n  history.push('/plan-prise');\n  return {\n    type: TYPES.RESET,\n  };\n};\n\nexport const doInit = (id, reload = true) => (dispatch) => {\n  const startLoading = {\n    state: true,\n    message: 'Chargement en cours... ',\n  };\n  const stopLoading = {\n    state: false,\n    message: '',\n  };\n  if (!(toNumber(id) > 0)) {\n    return dispatch({\n      type: TYPES.INIT,\n      id: -1,\n    });\n  }\n  dispatch({\n    type: TYPES.SET_LOADING,\n    values: startLoading,\n  });\n  dispatch({\n    type: TYPES.INIT,\n    id,\n  });\n  if (!reload) {\n    return dispatch({\n      type: TYPES.SET_LOADING,\n      values: stopLoading,\n    });\n  }\n  performLoadDetails(id).then((details) => {\n    dispatch({\n      type: TYPES.LOAD_DETAILS,\n      values: {\n        content: map(details.medicaments, (medicament) => ({\n          id: medicament.value.id,\n          denomination: medicament.value.denomination,\n          type: medicament.type,\n        })),\n        customData: details.custom_data || {},\n        settings: details.custom_settings,\n      },\n    });\n    dispatch({\n      type: DATA_TYPES.CACHE_DETAILS,\n      details: details.medicaments,\n    });\n    dispatch({\n      type: TYPES.SET_LOADING,\n      values: stopLoading,\n    });\n  });\n  return true;\n};\n\nexport const doUpdateLine = (lineId, action, input = {}) => (\n  dispatch,\n  getState,\n) => {\n  dispatch({\n    type: TYPES.UPDATE_LINE,\n    input,\n    action,\n    lineId,\n  });\n  performSaveModification(\n    getState().planPrise.pp_id,\n    'edit',\n    getState().planPrise.customData,\n  );\n};\n\nexport const doUpdate = (action) => {\n  return {\n    type: TYPES.UPDATE,\n    action,\n  };\n};\n\nexport const doLoadResult = (medicament) => {\n  return {\n    type: TYPES.LOAD_RESULT,\n    medicament,\n  };\n};\n\nexport const doAddLine = (medicament, history) => async (\n  dispatch,\n  getState,\n) => {\n  dispatch(\n    doUpdate({\n      type: 'add',\n      value: medicament,\n    }),\n  );\n  performSaveModification(\n    getState().planPrise.pp_id,\n    'add',\n    medicament,\n    (ppId) => {\n      if (getState().planPrise.ppId === -1) {\n        dispatch(doInit(ppId));\n        history.push(`/plan-prise/${ppId}`);\n      }\n    },\n  );\n  performSaveModification.flush();\n};\n\nexport const doAddCustomItem = (lineId, input) => {\n  return {\n    type: TYPES.ADD_CUSTOM_ITEM,\n    input,\n    lineId,\n  };\n};\n\nexport const doRemoveLine = (id) => async (dispatch, getState) => {\n  dispatch(\n    doUpdate({\n      type: 'remove',\n      value: id,\n    }),\n  );\n  performSaveModification(getState().planPrise.pp_id, 'remove', id);\n  performSaveModification.flush();\n};\n\nexport const doUpdateSettings = (input, value) => async (\n  dispatch,\n  getState,\n) => {\n  dispatch({\n    type: TYPES.UPDATE_SETTINGS,\n    input,\n    value,\n  });\n  performSaveModification(\n    getState().planPrise.pp_id,\n    'settings',\n    getState().planPrise.settings,\n  );\n};\n\nexport const doLoadList = () => async (dispatch) => {\n  performLoadList().then((list) => {\n    if (isArray(list))\n      dispatch({\n        type: TYPES.LOAD_LIST,\n        list,\n      });\n  });\n};\n","import compact from 'lodash/compact';\nimport concat from 'lodash/concat';\nimport get from 'lodash/get';\nimport merge from 'lodash/merge';\nimport omit from 'lodash/omit';\nimport reject from 'lodash/reject';\nimport set from 'lodash/set';\nimport uniqBy from 'lodash/uniqBy';\n\nexport const updateLine = (newState, action) => {\n  const { id, child, multiple, parent, readOnly } = action.input;\n  const { type, value } = action.action;\n  const { lineId } = action;\n  const { customData, loadedData } = newState;\n\n  if (type === 'data') {\n    set(\n      loadedData,\n      lineId,\n      merge(get(loadedData, lineId, {}), value),\n    );\n    return {\n      ...newState,\n      loadedData,\n    };\n  }\n  if (readOnly) return newState;\n  if (multiple === true) {\n    const currentState = get(customData, `${lineId}.${parent}`, {});\n    if (type === 'value') {\n      set(currentState, `${id}.${child}`, value);\n    } else if (type === 'check') {\n      set(currentState, `${id}.checked`, value);\n      console.log('check', currentState);\n    } else if (type === 'choose') {\n      set(currentState, `${id}`, value);\n    } else if (type === 'create') {\n      set(currentState, `${id}.${child}`, value);\n      set(currentState, `${id}.checked`, true);\n    }\n    set(customData, `${lineId}.${parent}`, currentState);\n  } else {\n    set(customData, `${lineId}.${parent}`, value);\n  }\n\n  return {\n    ...newState,\n    customData,\n  };\n};\n\nexport const update = (newState, action) => {\n  const { type, value } = action.action;\n  let content;\n  let customContent;\n  switch (type) {\n    case 'add':\n      content = uniqBy(concat(newState.content, value), 'id');\n      return {\n        ...newState,\n        content: compact(content), // Remove falsey/null values\n      };\n    case 'remove':\n      content = reject(newState.content, ['id', value]);\n      customContent = omit(newState.customData, value);\n      return {\n        ...newState,\n        content,\n        customData: customContent,\n      };\n    default:\n      console.log(action);\n      throw Error('No action type');\n  }\n};\n","import cloneDeep from 'lodash/cloneDeep';\nimport set from 'lodash/set';\nimport uniqueId from 'lodash/uniqueId';\nimport { TYPES } from './actions';\nimport { update, updateLine } from './services.local';\n\nconst initialState = {\n  content: null,\n  customData: null,\n  isLoading: {\n    state: false,\n    message: '',\n  },\n  list: null,\n  pp_id: null,\n  settings: null,\n};\n\nconst planPriseReducer = (state = initialState, action) => {\n  const newState = cloneDeep(state);\n  switch (action.type) {\n    case TYPES.SET_LOADING:\n      return {\n        ...newState,\n        isLoading: action.values,\n      };\n    case TYPES.INIT:\n      return {\n        ...newState,\n        pp_id: action.id,\n      };\n    case TYPES.LOAD_DETAILS: {\n      return {\n        ...newState,\n        ...action.values,\n      };\n    }\n    case TYPES.RESET:\n      return {\n        ...initialState,\n        list: newState.list,\n      };\n    case TYPES.UPDATE_LINE:\n      return updateLine(newState, action);\n    case TYPES.UPDATE:\n      return update(newState, action);\n    case TYPES.LOAD_RESULT:\n      return newState;\n    case TYPES.UPDATE_SETTINGS: {\n      const { parent, id } = action.input;\n      if (action.value.action === 'check') {\n        set(\n          newState,\n          `settings.${parent}.${id}.checked`,\n          action.value.value,\n        );\n      }\n      return newState;\n    }\n    case TYPES.LOAD_LIST:\n      return {\n        ...newState,\n        list: action.list,\n      };\n    case TYPES.ADD_CUSTOM_ITEM:\n      set(\n        newState,\n        `customData.${action.lineId}.custom_${\n          action.input\n        }.${uniqueId(`custom_${action.input}_`)}`,\n        {\n          checked: true,\n          [`custom_${action.input}`]: '',\n        },\n      );\n      return newState;\n    default:\n      return newState;\n  }\n};\n\nexport default planPriseReducer;\n","import asyncTypes, {\n  AsyncActionInterface,\n  AsyncObjectType,\n  ValueOf,\n} from 'helpers/async-types';\n\nexport type UserState = {\n  isError: boolean;\n  isLoading: boolean;\n  details: {\n    name?: string;\n    display_name?: string;\n    email?: string;\n  };\n};\n\nexport const LOAD_USER: AsyncObjectType = asyncTypes('LOAD_USER');\ntype LOAD_USER_TYPE = ValueOf<typeof LOAD_USER>;\n\ninterface LoadUserAction extends AsyncActionInterface {\n  type: LOAD_USER_TYPE;\n}\n\nexport type UserActions = LoadUserAction;\n","import cloneDeep from 'lodash/cloneDeep';\nimport { UserState, UserActions, LOAD_USER } from './types';\nimport { AxiosResponse } from 'helpers/async-types';\nimport get from 'lodash/get';\n\nconst initialState: UserState = {\n  isError: false,\n  isLoading: false,\n  details: {},\n};\n\nconst userReducer = (\n  state: UserState = initialState,\n  action: UserActions | AxiosResponse\n): UserState => {\n  const newState = cloneDeep(state);\n  console.log(action);\n  switch (action.type) {\n    case LOAD_USER.start:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case LOAD_USER.success:\n      if (get(action, 'payload.status') !== 200) return initialState;\n      return {\n        ...state,\n        details: get(action, 'payload.data'),\n        isLoading: false,\n      };\n    case LOAD_USER.error:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      return newState;\n  }\n};\n\nexport default userReducer;\n","import {\n  applyMiddleware,\n  compose,\n  createStore,\n  combineReducers,\n  Middleware,\n} from 'redux';\nimport axiosMiddleware from 'redux-axios-middleware';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport axiosClient, { middlewareConfig } from 'helpers/axios-clients';\nimport authReducer from 'store/auth/reducer';\nimport dataReducer from 'store/data/reducer';\nimport planPriseReducer from 'store/plan-prise/reducer';\nimport userReducer from 'store/user/reducer';\nimport { AuthState } from './auth/types';\nimport { UserState } from './user/types';\n\nexport interface RootState {\n  auth: AuthState;\n  user: UserState;\n  data: any;\n  planPrise: any;\n}\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  data: dataReducer,\n  planPrise: planPriseReducer,\n  user: userReducer,\n});\n\nconst middlewares: Middleware[] = [];\n\nmiddlewares.push(thunk as ThunkMiddleware<RootState, any>);\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nmiddlewares.push(axiosMiddleware(axiosClient, middlewareConfig));\n\nexport default compose(applyMiddleware(...middlewares))(createStore)(\n  rootReducer\n);\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Accueil: React.FunctionComponent = () => <Button>Test</Button>;\n\nexport default Accueil;\n","import jwt from 'jsonwebtoken';\nimport get from \"lodash/get\";\nimport { Tokens } from \"store/auth/types\";\n\nconst STORAGE_KEYS = {\n  tokens: 'state.auth.tokens',\n};\n\nconst decodeToken = (token: string): {[key: string]: any} | null => {\n  const decodedToken = jwt.decode(token, { complete: true });\n  if (decodedToken) return get(decodedToken, \"payload\");\n  return null;\n};\n\nexport const getValue = (token: string, key: string): string | null => {\n  const payload = decodeToken(token);\n  if (payload) return payload[key];\n  return null;\n};\n\nexport const performClearStorage = () => {\n  localStorage.removeItem(STORAGE_KEYS.tokens);\n};\n\nexport const performStoreTokens = (tokens: Tokens) => {\n  try {\n    localStorage.setItem(STORAGE_KEYS.tokens, JSON.stringify(tokens));\n    return true;\n  } catch (err) {\n    return console.error('Error storing token', err);\n  }\n};\n\nexport const performRestoreTokens = () => {\n  try {\n    const json = localStorage.getItem(STORAGE_KEYS.tokens);\n    if (!json) throw new Error()\n    const token = JSON.parse(json) || undefined;\n    return token;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const performValidation = (tokens: Tokens) => {\n  if (!tokens) return false;\n\n  const accessToken = tokens.access_token;\n  const expirationTime = getValue(accessToken, 'exp') * 1000; // PHP timestamp in s\n  const timeNow = new Date().getTime(); // JS timestamp in ms\n\n  if (expirationTime > timeNow) {\n    // Si le token expire plus tard que maintenant\n    return true;\n  }\n\n  return false;\n};\n","import { Action } from \"redux\"\nimport { ThunkAction } from 'redux-thunk'\nimport get from \"lodash/get\";\nimport { RootState} from \"store/store\"\nimport {\n  performClearStorage,\n  performRestoreTokens,\n  performStoreTokens,\n} from \"store/auth/services.local\";\nimport { AuthActions, LOGIN, LOGIN_RESTORE, LOGOUT, RESET, UserCredentials } from \"store/auth/types\"\nimport { AxiosSuccess } from \"helpers/async-types\"\n\nif (!process.env.REACT_APP_OAUTH_ID || !process.env.REACT_APP_OAUTH_SECRET)\nthrow new Error(\n  \"Please add REACT_APP_OAUTH_ID and REACT_APP_OAUTH_SECRET to .env\"\n  );\n  const clientCredentials = {\n    client_id: process.env.REACT_APP_OAUTH_ID,\n    client_secret: process.env.REACT_APP_OAUTH_SECRET,\n    grant_type: \"password\",\n    scope: \"\",\n  };\n  \n  export interface AxiosAction<TAction, TDispatchResponse = void> {\n    (dispatch: (action: TAction) => TDispatchResponse, getState: () => RootState): void;\n  }\n  \n  export const doLogin = ({\n    username,\n    password,\n  }: UserCredentials): AxiosAction<AuthActions, Promise<AxiosSuccess>> => (dispatch) => {\n    dispatch({\n      type: LOGIN.START,\n      auth: true,\n      payload: {\n        request: {\n          method: \"post\",\n          data: {\n            username,\n            password,\n            ...clientCredentials,\n          },\n          url: \"/oauth/token\",\n        },\n      },\n    }).then((response) => {\n      try {\n        if (response.payload.status !== 200)\n        throw new Error(\"User could not be logged in. \");\n        const tokens = get(response, \"payload.data\");\n        performStoreTokens(tokens);\n      } catch (error) {\n        console.log(\"Could not store tokens to localStorage\", error);\n      }\n    });\n  };\n  \n  export const doReset = (): AuthActions => {\n    performClearStorage();\n    return {\n      type: RESET,\n    };\n  };\n  \n  export const doLogout = (): AxiosAction<AuthActions, Promise<AxiosSuccess>> => (dispatch) => {\n    dispatch({\n      type: LOGOUT.START,\n      auth: true,\n      payload: {\n        request: {\n          method: \"delete\",\n          url: `/oauth/token`,\n        },\n      },\n    })\n    .then(() => dispatch(doReset()))\n    .catch(() => dispatch(doReset()));\n  };\n  \n  export const doRestore = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n  > => (dispatch) => {\n    const tokens = performRestoreTokens();\n    if (tokens) {\n      dispatch({\n        type: LOGIN_RESTORE,\n        tokens,\n      });\n    }\n  };\n  ","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Redirect, withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { Alert, Form, Button, Spinner } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport get from \"lodash/get\";\nimport includes from \"lodash/includes\";\n\nimport Skeleton from \"components/generic/Skeleton\";\nimport { doLogin, doLogout, doReset } from \"store/auth/actions\";\nimport authenticator, { AuthProps } from \"components/auth/AuthGate\";\n\nconst cancelRedirect = [\"/deconnexion\"];\n\nconst SigninSchema = Yup.object().shape({\n  signinEmail: Yup.string()\n    .email(\"L'adresse mail entrée ne semble pas valide\")\n    .required(\"L'adresse mail est requise\"),\n  signinPassword: Yup.string().required(\"Le mot de passe est requis\"),\n});\n\nexport enum Role {\n  signin,\n  register,\n  signout,\n}\n\ninterface RootState {\n  auth: {\n    isError: boolean;\n    isLoading: boolean;\n    tokens: {\n      token_type: string;\n      access_token: string;\n      refresh_token: string;\n      expires_in: number;\n    };\n  };\n}\n\nconst mapState = (state: RootState) => ({\n  isError: state.auth.isError,\n  isLoading: state.auth.isLoading,\n  tokens: state.auth.tokens,\n});\n\nconst mapDispatch = {\n  doLogin: (values: { username: string; password: string }) => doLogin(values),\n  doLogout: () => doLogout(),\n  reset: () => doReset(),\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype ReduxProps = ConnectedProps<typeof connector>;\n\ntype AuthentificationProps = ReduxProps &\n  RouteComponentProps &\n  AuthProps & {\n    role: Role;\n  };\n\ntype AuthentificationState = {\n  isMounted: boolean;\n};\n\nclass Authentification extends React.Component<\n  AuthentificationProps,\n  AuthentificationState\n> {\n  constructor(props: AuthentificationProps) {\n    super(props);\n\n    this.state = {\n      isMounted: false,\n    };\n\n    if (props.role === Role.signout) {\n      this.handleSignout();\n    }\n\n    if (props.role === Role.signin && get(props, \"location.state.message\")) {\n      // Si problème de connexion (expiré ou pas connecté),\n      // on deconnecte d'abord pour être sûr de ne pas avoir\n      // de doublons / mauvais token pas supprimé\n      props.reset();\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ isMounted: true });\n  }\n\n  componentWillUnmount() {\n    this.setState({ isMounted: false });\n  }\n\n  redirect = () => {\n    let redirect;\n    const { auth } = this.props;\n    if (auth.isValid) redirect = true;\n\n    if (redirect) {\n      let redirectTo = get(this.props, \"location.state.redirectTo\", \"/\");\n      if (includes(cancelRedirect, redirectTo)) redirectTo = \"/\";\n      return <Redirect to={redirectTo} />;\n    }\n\n    return null;\n  };\n\n  handleSignout = () => {\n    this.props.doLogout();\n  };\n\n  getTitle = (role: Role) => {\n    switch (role) {\n      case Role.signin:\n        return \"Connexion\";\n      case Role.register:\n        return \"Inscription\";\n      case Role.signout:\n        return \"Déconnexion\";\n      default:\n        return \"\";\n    }\n  };\n\n  getMessage = (status: string | null) => {\n    switch (status) {\n      case \"unauthorized\":\n        return \"Vous devez vous connecter avant d'accéder à cette page. \";\n      case \"expired\":\n        return \"Vous avez été deconnecté. \";\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { isLoading, role } = this.props;\n    const message = get(this.props, \"location.state.message\", null);\n    if (this.redirect()) return this.redirect();\n    return (\n      <Skeleton header={this.getTitle(role)} size={{ md: 6 }}>\n        {(() =>\n          message ? (\n            <Alert variant=\"danger\">{this.getMessage(message)}</Alert>\n          ) : null)()}\n        {role === Role.signin && (\n          <Formik\n            initialValues={{ signinEmail: \"\", signinPassword: \"\" }}\n            validationSchema={SigninSchema}\n            onSubmit={(\n              values: { signinEmail: string; signinPassword: string },\n              { setSubmitting }\n            ) => {\n              setSubmitting(true);\n              const { signinEmail, signinPassword } = values;\n              const { doLogin: login } = this.props;\n              if (signinEmail && signinPassword) {\n                login({\n                  password: signinPassword,\n                  username: signinEmail,\n                });\n                if (this.state.isMounted) setSubmitting(false);\n              }\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group controlId=\"signinEmail\">\n                  <Form.Label>Adresse mail</Form.Label>\n                  <Form.Control\n                    autoComplete=\"username\"\n                    isInvalid={!!errors.signinEmail}\n                    name=\"signinEmail\"\n                    placeholder=\"Adresse mail\"\n                    type=\"email\"\n                    value={values.signinEmail}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                  {errors.signinEmail && touched.signinEmail ? (\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.signinEmail}\n                    </Form.Control.Feedback>\n                  ) : (\n                    <Form.Text className=\"text-muted\">\n                      Ne sera jamais utilisée ou diffusée.\n                    </Form.Text>\n                  )}\n                </Form.Group>\n                <Form.Group controlId=\"signinPassword\">\n                  <Form.Label>Mot de passe</Form.Label>\n                  <Form.Control\n                    autoComplete=\"current-password\"\n                    isInvalid={!!errors.signinPassword}\n                    name=\"signinPassword\"\n                    placeholder=\"Adresse mail\"\n                    type=\"password\"\n                    value={values.signinPassword}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.signinPassword}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Button block disabled={isLoading} type=\"submit\">\n                  {isLoading && (\n                    <Spinner\n                      animation=\"border\"\n                      size=\"sm\"\n                      style={{ marginRight: 10 }}\n                    />\n                  )}\n                  {isLoading ? \"Connexion en cours\" : \"Se connecter\"}\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        )}\n        {role === Role.register && <p>À mettre en place... </p>}\n        {role === Role.signout && (\n          <React.Fragment>\n            <Spinner animation=\"border\" as=\"span\" className=\"mr-2\" size=\"sm\" />\n            Déconnexion en cours\n          </React.Fragment>\n        )}\n      </Skeleton>\n    );\n  }\n}\n\nexport default withRouter(connector(authenticator(Authentification)));\n","import React from \"react\";\nimport { Subtract } from \"utility-types\";\nimport get from \"lodash/get\";\nimport store from \"store/store\";\nimport { performValidation, getValue } from \"store/auth/services.local\";\nimport { doRestore } from \"store/auth/actions\";\n\n/**\n * TODO: Ne pas devoir appeler connect dans le composant parent\n * -> Accéder au store directement depuis AuthGate\n */\n\nexport type AuthProps = {\n  auth: {\n    hasToken: boolean;\n    isValid: boolean;\n    user: {\n      admin: boolean;\n      name: string;\n    };\n  };\n};\n\nconst authenticate = <P extends AuthProps>(Component: React.ComponentType<P>) =>\n  class Authenticator extends React.Component<Subtract<P, AuthProps>> {\n    render() {\n      if (!(\"tokens\" in this.props) && !(\"doRestore\" in this.props))\n        throw new Error(\"Authentication needs direct access to tokens\");\n      const tokens = get(this.props, \"tokens\");\n      if (!tokens) store.dispatch(doRestore());\n      const isValid = performValidation(tokens);\n      const hasToken = !tokens.access_token;\n      const user = getValue(get(tokens, \"access_token\"), \"usr\") || {};\n      return (\n        <Component {...(this.props as P)} auth={{ hasToken, isValid, user }} />\n      );\n    }\n  };\n\nexport default authenticate;\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport authenticate, { AuthProps } from \"components/auth/AuthGate\";\n\ninterface RootState {\n  auth: {\n    tokens: {\n      token_type: string;\n      access_token: string;\n      refresh_token: string;\n      expires_in: number;\n    };\n  };\n}\n\nconst mapState = (state: RootState) => ({\n  tokens: state.auth.tokens,\n});\n\nconst connector = connect(mapState);\n\ntype StoreProps = ConnectedProps<typeof connector>;\n\ntype NavigationProps = StoreProps & AuthProps;\n\nclass Navigation extends React.Component<NavigationProps> {\n  auth = (component: React.ReactElement) => {\n    const { auth } = this.props;\n    if (auth.isValid) {\n      return component;\n    }\n    return null;\n  };\n\n  public = (component: React.ReactElement) => {\n    const { auth } = this.props;\n    if (!auth.isValid) {\n      return component;\n    }\n    return null;\n  };\n\n  admin = (component: React.ReactElement) => {\n    const {\n      auth: {\n        user: { admin: isAdmin = false },\n      },\n    } = this.props;\n    if (isAdmin) {\n      return this.auth(component);\n    }\n    return null;\n  };\n\n  render() {\n    const {\n      auth: {\n        user: { name = \"\" },\n      },\n    } = this.props;\n    return (\n      <Navbar bg=\"light\" className=\"mb-1\" expand=\"lg\">\n        <Navbar.Brand>\n          <Link to=\"/\">Plan de prise</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {this.auth(\n              <LinkContainer to=\"/plan-prise\">\n                <Nav.Link>Plan de prise</Nav.Link>\n              </LinkContainer>\n            )}\n          </Nav>\n          {this.auth(\n            <Nav>\n              <LinkContainer to=\"/profile\">\n                <Nav.Link>{name}</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/deconnexion\">\n                <Nav.Link>Se déconnecter</Nav.Link>\n              </LinkContainer>\n            </Nav>\n          )}\n          {this.public(\n            <Nav>\n              <LinkContainer to=\"/connexion\">\n                <Nav.Link>Se connecter</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/inscription\">\n                <Nav.Link>S'inscrire</Nav.Link>\n              </LinkContainer>\n            </Nav>\n          )}\n        </Navbar>\n      </Navbar>\n    );\n  }\n}\n\nexport default connector(authenticate(Navigation));\n","import React from \"react\";\nimport { Card, Container, Col, Row } from \"react-bootstrap\";\n\ninterface Size {\n  xs?: number;\n  sm?: number;\n  md?: number;\n  lg?: number;\n  xl?: number;\n}\n\ntype SkeletonProps = {\n  children: React.ReactNode;\n  header: string;\n  size?: Size;\n};\n\nconst Skeleton = ({ children, header, size, ...props }: SkeletonProps) => {\n  size = size || {\n    xl: 8,\n  };\n  return (\n    <Container {...props}>\n      <Row className=\"justify-content-center\">\n        <Col {...size}>\n          <Card>\n            <Card.Header className=\"d-flex\">{header}</Card.Header>\n            <Card.Body>{children}</Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Skeleton;\n","import React from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Redirect, Route as RouterRoute } from \"react-router-dom\";\nimport authenticator, { AuthProps } from \"components/auth/AuthGate\";\n\ninterface RootState {\n  auth: {\n    tokens: {\n      token_type: string;\n      access_token: string;\n      refresh_token: string;\n      expires_in: number;\n    };\n  };\n}\n\nconst mapState = (state: RootState) => ({\n  tokens: state.auth.tokens,\n});\n\nconst connector = connect(mapState);\n\ntype StoreProps = ConnectedProps<typeof connector>;\n\ntype ProtectedRouteProps = StoreProps &\n  AuthProps & {\n    children: React.ReactNode;\n    path: string;\n  };\n\nconst ProtectedRoute: React.FunctionComponent<ProtectedRouteProps> = (\n  props\n) => {\n  const { auth, path } = props;\n  if (!auth.hasToken) {\n    console.info(\"Cannot access route: No token provided\", path);\n    const redirectTo = path;\n    return (\n      <Redirect\n        to={{\n          pathname: \"/connexion\",\n          state: {\n            message: \"unauthorized\",\n            redirectTo,\n          },\n        }}\n      />\n    );\n  }\n  if (!auth.isValid) {\n    console.info(\"Cannot access route: Token expired\", path);\n    const redirectTo = path;\n    return (\n      <Redirect\n        to={{\n          pathname: \"/connexion\",\n          state: {\n            message: \"expired\",\n            redirectTo,\n          },\n        }}\n      />\n    );\n  }\n  return <RouterRoute {...props} />;\n};\n\nexport default connector(authenticator(ProtectedRoute));\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport keys from \"lodash/keys\";\nimport Skeleton from \"components/generic/Skeleton\";\nimport { doLoadUser } from \"store/user/actions\";\n\ninterface reduxState {\n  user: {\n    details: {\n      name: string;\n      display_name: string;\n      admin: boolean;\n      email: string;\n    };\n    isError: boolean | string;\n    isLoading: boolean;\n  };\n}\n\nconst mapState = (state: reduxState) => ({\n  details: state.user.details,\n  isError: state.user.isError,\n  isLoading: state.user.isLoading,\n});\n\nconst mapDispatch = {\n  loadUser: () => doLoadUser(),\n};\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Profile: React.FunctionComponent<PropsFromRedux> = (props) => {\n  const { details, isError, isLoading } = props;\n  const [isEditing, setIsEditing] = useState<string | false>(false);\n\n  useEffect(() => {\n    const { loadUser } = props;\n    if (keys(details).length === 0 && !isLoading && !isError) {\n      loadUser();\n    }\n  });\n\n  const getButtons = (property: string) =>\n    isEditing !== property ? (\n      <Button block variant=\"link\" onClick={() => setIsEditing(property)}>\n        <span className=\"fa fa-edit\" />\n      </Button>\n    ) : (\n      <Row>\n        <Col className=\"p-0\" sm={6}>\n          <Button variant=\"success\" onClick={() => setIsEditing(false)}>\n            <span className=\"fa fa-check\" />\n          </Button>\n        </Col>\n        <Col className=\"p-0\" sm={6}>\n          <Button variant=\"danger\" onClick={() => setIsEditing(false)}>\n            <span className=\"fa fa-times\" />\n          </Button>\n        </Col>\n      </Row>\n    );\n\n  return (\n    <Skeleton header=\"Profil\">\n      {(() => {\n        if (isLoading) return \"Chargement en cours... \";\n        if (isError) return \"Erreur lors du chargement\";\n        return (\n          <React.Fragment>\n            <Form.Group as={Row} controlId=\"name\">\n              <Form.Label column sm=\"3\">\n                Nom et Prénom\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  defaultValue={details.name || \"\"}\n                  name=\"name\"\n                  plaintext={isEditing !== \"name\"}\n                  readOnly={isEditing !== \"name\"}\n                />\n              </Col>\n              <Col sm=\"2\">{getButtons(\"name\")}</Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"rpps\">\n              <Form.Label column sm=\"3\">\n                RPPS\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  defaultValue=\"Reste à ajouter\"\n                  name=\"rpps\"\n                  plaintext={isEditing !== \"rpps\"}\n                  readOnly={isEditing !== \"rpps\"}\n                />\n              </Col>\n              <Col sm=\"2\">{getButtons(\"rpps\")}</Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"display-name\">\n              <Form.Label column sm=\"3\">\n                Nom affiché\n                <Form.Text className=\"text-muted\">\n                  Sera imprimé sur les documents\n                </Form.Text>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  defaultValue={details.display_name || details.name || \"\"}\n                  name=\"display-name\"\n                  plaintext={isEditing !== \"display-name\"}\n                  readOnly={isEditing !== \"display-name\"}\n                />\n              </Col>\n              <Col sm=\"2\">{getButtons(\"display-name\")}</Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"email\">\n              <Form.Label column sm=\"3\">\n                Email\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  defaultValue={details.email || \"\"}\n                  name=\"email\"\n                  plaintext={isEditing !== \"email\"}\n                  readOnly={isEditing !== \"email\"}\n                />\n              </Col>\n              <Col sm=\"2\">{getButtons(\"email\")}</Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"old-password\">\n              <Form.Label column sm=\"3\">\n                {isEditing === \"password\"\n                  ? \"Ancien mot de passe\"\n                  : \"Mot de passe\"}\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  autoComplete=\"current-password\"\n                  defaultValue={\n                    isEditing !== \"password\" ? \"***************\" : \"\"\n                  }\n                  name=\"old-password\"\n                  plaintext={isEditing !== \"password\"}\n                  readOnly={isEditing !== \"password\"}\n                  type=\"password\"\n                />\n              </Col>\n              <Col sm=\"2\">{getButtons(\"password\")}</Col>\n            </Form.Group>\n            {isEditing === \"password\" && (\n              <React.Fragment>\n                <Form.Group as={Row} controlId=\"new-password-1\">\n                  <Form.Label column sm=\"3\">\n                    Nouveau mot de passe\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      autoComplete=\"new-password\"\n                      name=\"new-password-1\"\n                      type=\"password\"\n                    />\n                  </Col>\n                  <Col sm=\"2\" />\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"new-password-2\">\n                  <Form.Label column sm=\"3\">\n                    Confirmation\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      autoComplete=\"new-password\"\n                      name=\"new-password-2\"\n                      type=\"password\"\n                    />\n                  </Col>\n                  <Col sm=\"2\" />\n                </Form.Group>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        );\n      })()}\n    </Skeleton>\n  );\n};\n\nexport default connector(Profile);\n","import { LOAD_USER, UserActions } from './types';\n\nexport const doLoadUser = (): UserActions => {\n  return {\n    type: LOAD_USER.start,\n    payload: {\n      request: {\n        url: '/user',\n      },\n    },\n    auth: true,\n  };\n};\n","import concat from 'lodash/concat';\nimport get from 'lodash/get';\nimport keys from 'lodash/keys';\nimport map from 'lodash/map';\nimport mapValues from 'lodash/mapValues';\nimport toLower from 'lodash/toLower';\nimport values from 'lodash/values';\nimport isArray from 'lodash/isArray';\nimport isString from 'lodash/isString';\nimport compact from 'lodash/compact';\nimport cloneDeep from 'lodash/cloneDeep';\nimport find from 'lodash/find';\nimport forEach from 'lodash/forEach';\nimport set from 'lodash/set';\n\nclass PPItem {\n  constructor(props) {\n    this.props = props;\n  }\n\n  get values() {\n    const {\n      addedData,\n      customValue,\n      defaultValue,\n      input,\n      medicament,\n      needChoice,\n    } = this.props;\n    if (!medicament) return [];\n    if (input.id === 'denomination') {\n      return [\n        {\n          value: medicament.custom_denomination,\n          style: 'custom_denomination',\n        },\n        {\n          value: map(medicament.compositions, 'denomination').join(\n            ' + ',\n          ),\n          style: 'compositions',\n        },\n        {\n          value: `(Voie ${\n            toLower(\n              window.php.default.voies_administration[\n                medicament.voies_administration\n              ],\n            ) || ''\n          })`,\n          style: 'voies_administration',\n        },\n      ];\n    }\n    const returnValue =\n      customValue.length > 0 ? customValue : defaultValue;\n    if (needChoice) {\n      if (input.multiple) {\n        return concat(\n          map(defaultValue, (item) => {\n            const customItemData = get(\n              customValue,\n              `${item.id}.${input.display}`,\n              get(item, input.display, ''),\n            );\n            const customItemChecked = get(\n              customValue,\n              `${item.id}.checked`,\n              item.population === null,\n            );\n            const customItemHelp = get(\n              item,\n              input.help,\n              get(input, 'label', null),\n            );\n            return {\n              checked: customItemChecked,\n              value: customItemData,\n              help: customItemHelp,\n              id: item.id,\n            };\n          }),\n          map(values(addedData), (item, i) => ({\n            value: get(item, `custom_${input.id}`, null),\n            checked: item.checked,\n            id: keys(addedData)[i],\n            addedData: true,\n          })),\n        );\n      }\n      return map(returnValue, (item) => ({\n        value: get(item, input.display, null),\n        choose: get(item, input.choose, null),\n      }));\n    }\n    if (isArray(returnValue)) {\n      switch (returnValue.length) {\n        case 0:\n          return null;\n        case 1:\n          return returnValue[0][input.display];\n        default:\n          return map(returnValue, (item) =>\n            get(item, input.display, null),\n          );\n      }\n    } else {\n      return returnValue;\n    }\n  }\n}\n\nexport default class PPRepository {\n  constructor(props) {\n    this.content = props.content || [];\n    this.customData = props.customData || [];\n    this.data = props.data || [];\n    this.settings = props.settings || [];\n    this.valuesObject = {};\n    this.needChoiceObject = {};\n    this.init();\n  }\n\n  get columns() {\n    return this.getColumns();\n  }\n\n  getColumns = () => {\n    const inputs = cloneDeep(window.php.default.inputs);\n    const posologies = inputs.posologies.inputs;\n\n    inputs.posologies.inputs = compact(\n      map(keys(posologies), (key) => {\n        const posologie = posologies[key];\n        const isChecked = get(\n          this.settings,\n          `inputs.${posologie.id}.checked`,\n          null,\n        );\n        const isDefault = posologie.default;\n        const isDisplayed =\n          isChecked || (isChecked === null && isDefault);\n        return isDisplayed ? posologie : null;\n      }),\n    );\n\n    return [\n      {\n        header: 'Médicament',\n        id: 'denomination',\n        multiple: true,\n      },\n      ...map(inputs.properties.inputs, (input) => ({\n        header: input.label,\n        ...input,\n      })),\n      ...map(inputs.posologies.inputs, (input) => ({\n        header: input.label,\n        poso: true,\n        ...input,\n      })),\n      ...map(inputs.commentaires.inputs, (input) => ({\n        header: input.label,\n        ...input,\n      })),\n    ];\n  };\n\n  get inputs() {\n    const inputs = cloneDeep(window.php.default.inputs);\n    const posologies = inputs.posologies.inputs;\n\n    inputs.posologies.inputs = compact(\n      map(keys(posologies), (key) => {\n        const posologie = posologies[key];\n        const isChecked = get(\n          this.settings,\n          `inputs.${posologie.id}.checked`,\n          null,\n        );\n        const isDefault = posologie.default;\n        const isDisplayed =\n          isChecked || (isChecked === null && isDefault);\n        return isDisplayed ? posologie : null;\n      }),\n    );\n\n    return inputs;\n  }\n\n  init = () => {\n    this.valuesObject = map(this.content, (line) => {\n      const lineObject = {};\n      const medicament = find(this.data, line);\n      forEach(this.columns, (column) => {\n        const defaultValue = get(medicament, `data.${column.id}`, []);\n        const customValue = get(\n          this.customData,\n          `${line.id}.${column.id}`,\n          [],\n        );\n        const needChoice =\n          column.multiple ||\n          (customValue.length === 0 &&\n            isArray(defaultValue) &&\n            defaultValue.length > 1);\n        const addedData = get(\n          this.customData,\n          `${line.id}.custom_${column.id}`,\n          [],\n        );\n        const item = new PPItem({\n          defaultValue,\n          customValue,\n          needChoice,\n          addedData,\n          medicament: get(medicament, 'data', null),\n          input: column,\n        });\n        set(lineObject, column.id, item.values);\n        if (needChoice && !column.multiple) {\n          set(\n            this.needChoiceObject,\n            line.id,\n            concat(get(this.needChoiceObject, line.id, []), [\n              column.id,\n            ]),\n          );\n        }\n      });\n      return {\n        line,\n        state: get(medicament, 'state', null),\n        data: lineObject,\n      };\n    });\n  };\n\n  isLoading = (medicament) => {\n    const details = find(this.data, medicament);\n    if (!details) return false;\n    return details.state.isLoading;\n  };\n\n  isLoaded = (medicament) => {\n    const details = find(this.data, medicament) || {\n      data: null,\n      state: { isLoading: false },\n    };\n    return details.data && !details.state.isLoading;\n  };\n\n  get values() {\n    return map(this.valuesObject, (object) =>\n      mapValues(object.data, (value, key) => {\n        if (isString(value)) return { text: value, style: key };\n        if (isArray(value)) {\n          const input = find(this.columns, { id: key });\n          if (input.multiple)\n            return {\n              stack: map(value, (i) => ({\n                text: isString(i) ? i : i.value,\n                style: i.style ? i.style : key,\n              })).flatMap((e, index) =>\n                index\n                  ? [e, { text: ' ', style: 'interline' }]\n                  : [e, { text: ' ', style: 'interline' }],\n              ), // add interline https://stackoverflow.com/questions/46528616/how-to-insert-a-new-element-in-between-all-elements-of-a-js-array\n            };\n          if (input.join)\n            return {\n              text: map(value, (i) =>\n                isString(i) ? i : i.value,\n              ).join(input.join),\n            };\n        }\n        return '';\n      }),\n    );\n  }\n\n  get needChoice() {\n    return this.needChoiceObject;\n  }\n}\n","import pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport filter from 'lodash/filter';\nimport fromPairs from 'lodash/fromPairs';\nimport map from 'lodash/map';\nimport get from 'lodash/get';\nimport startsWith from 'lodash/startsWith';\n\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst pageMargins = 20;\n\nexport default function generate(ppId, columns, values) {\n  const document = {\n    pageSize: 'A4',\n    pageOrientation: 'landscape',\n    pageMargins: [pageMargins, pageMargins * 2.5],\n    header: {\n      stack: [\n        {\n          text:\n            'Un plan pour vous aider à mieux prendre vos médicaments',\n          style: 'header',\n        },\n        { text: \"Ceci n'est pas une ordonnance\", style: 'header' },\n      ],\n      margin: [pageMargins, pageMargins],\n    },\n    footer: (currentPage, pageCount) => ({\n      columns: [\n        {\n          text: `Édité par ${window.php.user.name}`,\n          style: 'footer',\n        },\n        {\n          text: `Plan de prise n°${ppId}`,\n          alignment: 'center',\n          style: 'footer',\n        },\n        {\n          text: `Page ${currentPage.toString()} sur ${pageCount}`,\n          alignment: 'right',\n          style: 'footer',\n        },\n      ],\n      margin: [pageMargins, pageMargins],\n    }),\n    content: [\n      {\n        table: {\n          layout: 'planPrise',\n          headerRows: 1,\n          dontBreakRows: true,\n          body: [\n            [\n              ...map(columns, (column) => ({\n                text: column.header,\n                alignment: startsWith(column.id, 'poso_')\n                  ? 'center'\n                  : 'left',\n                style: ['tableHeader', column.id],\n              })),\n            ],\n            ...map(values, (line) => [\n              ...map(columns, (column) =>\n                get(line, column.id, {\n                  text: ' ',\n                  style: column.id,\n                }),\n              ),\n            ]),\n          ],\n          widths: map(columns, (column) =>\n            startsWith(column.id, 'poso_') ? 40 : 'auto',\n          ),\n        },\n      },\n    ],\n    defaultStyle: {\n      fontSize: 10,\n      fillOpacity: 0.5,\n    },\n    styles: {\n      header: {\n        bold: true,\n        color: 'gray',\n        fontSize: 9,\n      },\n      get footer() {\n        return this.header;\n      },\n      tableHeader: {\n        bold: true,\n        fillOpacity: 1,\n      },\n      interline: {\n        fontSize: 2,\n      },\n      custom_denomination: {\n        bold: true,\n      },\n      compositions: {\n        italics: true,\n        color: 'gray',\n      },\n      voies_administration: {\n        fontSize: 9,\n        color: 'gray',\n      },\n      ...fromPairs(\n        filter(columns, (col) =>\n          map(startsWith(col.id, 'poso_'), (poso) => {\n            return [\n              poso.id,\n              {\n                alignment: 'center',\n                fillColor: poso.color,\n              },\n            ];\n          }),\n        ),\n      ),\n    },\n  };\n  pdfMake.createPdf(document).open();\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, FormCheck } from \"react-bootstrap\";\nimport autosize from \"autosize\";\nimport get from \"lodash/get\";\nimport isObject from \"lodash/isObject\";\nimport map from \"lodash/map\";\nimport isArray from \"lodash/isArray\";\n\nimport { doUpdateLine } from \"store/plan-prise/actions\";\n\nclass PPInput extends React.Component {\n  componentDidMount() {\n    autosize(this.textarea);\n  }\n\n  render() {\n    const { input, lineId, updateLine, value } = this.props;\n    const stringValue = isObject(value) ? value.value : value;\n    const help = get(value, \"help\", null);\n\n    return (\n      <React.Fragment>\n        <Form.Text\n          className=\"text-muted font-italic\"\n          style={{ fontSize: \".8em\" }}\n        >\n          {help}\n        </Form.Text>\n        <Form.Control\n          ref={(i) => {\n            this.textarea = i;\n          }}\n          as=\"textarea\"\n          className=\"flex-fill\"\n          disabled={input.readOnly}\n          rows={1}\n          value={stringValue || \"\"}\n          onChange={(event) =>\n            updateLine(\n              lineId,\n              {\n                type: \"value\",\n                value: event.target.value,\n              },\n              {\n                parent: get(value, \"addedData\", false)\n                  ? `custom_${input.id}`\n                  : input.id,\n                child: get(value, \"addedData\", false)\n                  ? `custom_${input.id}`\n                  : input.display,\n                id: get(this.props, \"value.id\", null),\n                readOnly: input.readOnly,\n                multiple: input.multiple,\n              }\n            )\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nPPInput.propTypes = {\n  input: PropTypes.shape({\n    display: PropTypes.string,\n    id: PropTypes.string,\n    multiple: PropTypes.bool,\n    readOnly: PropTypes.bool,\n  }),\n  lineId: PropTypes.number,\n  updateLine: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      value: PropTypes.any,\n    }),\n  ]),\n};\n\nconst PPInputBase = (props) => {\n  const { children, input } = props;\n  return (\n    <div>\n      <p\n        className=\"text-muted mb-0 ml-1\"\n        style={{\n          fontSize: \".8em\",\n        }}\n      >\n        {input.label}\n      </p>\n      {children}\n    </div>\n  );\n};\n\nPPInputBase.propTypes = {\n  children: PropTypes.element,\n  input: PropTypes.shape({\n    label: PropTypes.string,\n  }),\n};\n\nconst PPInputGroup = (props) => {\n  const { addCustomItem, updateLine, values, ...otherProps } = props;\n  const { input, lineId } = otherProps;\n  const inputValue = values[input.id];\n\n  if (isArray(inputValue)) {\n    return (\n      <PPInputBase input={input}>\n        {[\n          ...map(inputValue, (inputVal) => (\n            <Form.Group key={inputVal}>\n              <Form.Check className=\"flex-fill mb-2\">\n                <FormCheck.Input\n                  checked={inputVal.checked}\n                  style={\n                    inputVal.help\n                      ? {\n                          marginTop: \"1.8em\",\n                        }\n                      : null\n                  }\n                  type={input.multiple ? \"checkbox\" : \"radio\"}\n                  onChange={(event) =>\n                    updateLine(\n                      lineId,\n                      {\n                        type: input.multiple ? \"check\" : \"choose\",\n                        value: input.multiple\n                          ? event.target.checked\n                          : inputVal.choose,\n                      },\n                      {\n                        parent: inputVal.addedData\n                          ? `custom_${input.id}`\n                          : input.id,\n                        id: inputVal.id,\n                        multiple: input.multiple,\n                      }\n                    )\n                  }\n                />\n                <FormCheck.Label className=\"d-flex flex-column\">\n                  {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n                  <PPInput value={inputVal} {...otherProps} />\n                </FormCheck.Label>\n              </Form.Check>\n            </Form.Group>\n          )),\n          input.multiple && (\n            <Button\n              key={-1}\n              variant=\"link\"\n              onClick={() => addCustomItem(null, input.id)}\n            >\n              Nouvelle ligne\n            </Button>\n          ),\n        ]}\n      </PPInputBase>\n    );\n  }\n\n  return (\n    <PPInputBase input={input}>\n      <Form.Group>\n        <PPInput value={inputValue} {...otherProps} />\n      </Form.Group>\n    </PPInputBase>\n  );\n};\n\nPPInputGroup.propTypes = {\n  addCustomItem: PropTypes.func,\n  updateLine: PropTypes.func,\n  // eslint-disable-next-line react/forbid-prop-types\n  values: PropTypes.any,\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateLine: (lineId, action, input) =>\n      dispatch(doUpdateLine(lineId, action, input)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PPInputGroup);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Spinner } from \"react-bootstrap\";\nimport get from \"lodash/get\";\nimport find from \"lodash/find\";\nimport map from \"lodash/map\";\nimport keys from \"lodash/keys\";\nimport includes from \"lodash/includes\";\n\nimport PPInputGroup from \"./PPInputGroup\";\nimport { doAddCustomItem, doRemoveLine } from \"store/plan-prise/actions\";\n\nclass PPCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n    };\n  }\n\n  render() {\n    const {\n      details,\n      denomination,\n      isLoaded,\n      lineId,\n      needChoice,\n      removeLine,\n      repository,\n    } = this.props;\n    const { isOpened } = this.state;\n    const data = get(details, \"data\", null);\n    const id = lineId;\n    const { inputs } = repository;\n\n    return (\n      <Card className=\"mb-3\">\n        <Card.Header\n          className=\"d-flex\"\n          onClick={(event) =>\n            !event.target.classList.contains(\"prevent-toggle\") &&\n            data &&\n            this.setState({ isOpened: !isOpened })\n          }\n        >\n          <div\n            className=\"d-flex flex-column flex-grow-1\"\n            style={{\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n            }}\n          >\n            <div className=\"d-flex\">\n              <div className=\"text-truncate\">\n                {data &&\n                find(data.denomination, {\n                  style: \"custom_denomination\",\n                })\n                  ? find(data.denomination, {\n                      style: \"custom_denomination\",\n                    }).value\n                  : `Chargement de ${denomination} en cours... `}\n              </div>\n            </div>\n            {data &&\n              find(data.denomination, {\n                style: \"compositions\",\n              }) && (\n                <div className=\"text-muted text-truncate\">\n                  <small>\n                    {\n                      find(data.denomination, {\n                        style: \"compositions\",\n                      }).value\n                    }\n                  </small>\n                </div>\n              )}\n          </div>\n          <div className=\"d-flex flex-shrink-0 flex-column\">\n            {!isLoaded ? (\n              <Button\n                className=\"ml-auto\"\n                disabled\n                size=\"sm\"\n                tabIndex=\"-1\"\n                variant=\"link\"\n              >\n                <small className=\"mr-1\">Chargement en cours</small>\n                <Spinner />\n              </Button>\n            ) : (\n              <React.Fragment>\n                <Button\n                  className=\"rounded-pill text-danger ml-auto py-0 prevent-toggle\"\n                  size=\"sm\"\n                  tabIndex=\"-1\"\n                  variant=\"light\"\n                  onClick={() => removeLine(id)}\n                >\n                  <small className=\"mr-1 prevent-toggle\">\n                    Supprimer la ligne\n                  </small>\n                  <i className=\"fa fa-trash prevent-toggle\" />\n                </Button>\n                <Button\n                  className=\"rounded-pill text-muted ml-auto py-0 mt-1\"\n                  size=\"sm\"\n                  tabIndex=\"-1\"\n                  variant=\"light\"\n                >\n                  {isOpened ? (\n                    <React.Fragment>\n                      <small className=\"mr-1\">Masquer les détails</small>\n                      <i className=\"far fa-caret-square-up\" />\n                    </React.Fragment>\n                  ) : (\n                    <React.Fragment>\n                      <small className=\"mr-1\">Afficher les détails</small>\n                      <i className=\"far fa-caret-square-down\" />\n                    </React.Fragment>\n                  )}\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Card.Header>\n        {isLoaded && (\n          <Card.Body className=\"row\">\n            {map(keys(inputs), (sectionKey) => {\n              const section = inputs[sectionKey];\n              if (!section.collapse || isOpened) {\n                return (\n                  <div\n                    key={sectionKey}\n                    className={\n                      !isOpened && !section.collapse\n                        ? \"col-md-12 d-flex justify-content-around\"\n                        : section.class\n                    }\n                  >\n                    {map(section.inputs, (input) => (\n                      <PPInputGroup\n                        key={input}\n                        input={input}\n                        lineId={id}\n                        values={details.data}\n                      />\n                    ))}\n                  </div>\n                );\n              }\n              const needChoiceInputs = find(section.inputs, (i) =>\n                includes(needChoice, i.id)\n              );\n              return (\n                needChoiceInputs && (\n                  <div\n                    key={sectionKey}\n                    className=\"col-md-12 justify-content-around\"\n                  >\n                    <PPInputGroup\n                      input={needChoiceInputs}\n                      lineId={id}\n                      values={details.data}\n                    />\n                  </div>\n                )\n              );\n            })}\n          </Card.Body>\n        )}\n      </Card>\n    );\n  }\n}\n\nPPCard.propTypes = {\n  denomination: PropTypes.string,\n  details: PropTypes.shape({\n    data: PropTypes.any,\n  }),\n  isLoaded: PropTypes.bool,\n  lineId: PropTypes.number,\n  needChoice: PropTypes.shape({\n    includes: PropTypes.func,\n  }),\n  removeLine: PropTypes.func,\n  repository: PropTypes.shape({\n    inputs: PropTypes.any,\n  }),\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addCustomItem: (lineId, input) => dispatch(doAddCustomItem(lineId, input)),\n    removeLine: (id) => dispatch(doRemoveLine(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PPCard);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport axios from 'axios';\nimport AsyncSelect from 'react-select/async';\nimport constant from 'lodash/constant';\nimport debounce from 'lodash/debounce';\n\nexport default class SearchMedicament extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      select: {\n        value: null,\n      },\n    };\n\n    this.loadOptions = debounce(this.loadOptions, 500, {\n      leading: true,\n    });\n  }\n\n  loadOptions = async (inputValue) => {\n    if (this.axiosSourceOptions) {\n      this.axiosSourceOptions.cancel('Cancel previous request');\n    }\n    this.axiosSourceOptions = axios.CancelToken.source();\n    return axios\n      .get(window.php.routes.api.all.search, {\n        cancelToken: this.axiosSourceOptions.token,\n        params: {\n          token: window.php.routes.token,\n          query: inputValue,\n        },\n      })\n      .then((response) => {\n        if (response.data.length > 0) {\n          return response.data;\n        }\n        return [];\n      })\n      .catch((thrown) => {\n        if (axios.isCancel(thrown)) {\n          // console.log(thrown.message);\n        } else {\n          console.log(thrown);\n        }\n      });\n  };\n\n  handleSelect = (inputValues) => {\n    const { multiple, onSelect } = this.props;\n    onSelect(inputValues || []);\n    if (multiple) this.setValue(null);\n    return inputValues;\n  };\n\n  handleChange = (inputValue) => {\n    this.setValue(inputValue);\n    return inputValue;\n  };\n\n  setValue = (value) => {\n    this.setState((prevState) => ({\n      select: {\n        ...prevState.select,\n        value,\n      },\n    }));\n  };\n\n  render() {\n    const { defaultOptions, multiple } = this.props;\n    const { select } = this.state;\n    const colors = {};\n    if (document.querySelector('.btn-primary')) {\n      colors.primary = document.querySelector('.btn-primary')\n        ? window.getComputedStyle(\n            document.querySelector('.btn-primary'),\n          ).backgroundColor\n        : 'grey';\n      const decompose = /rgba?\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*\\d+[.\\d+]*)*\\)/g.exec(\n        colors.primary,\n      );\n      colors.primary50 = `rgba(${[\n        decompose[1],\n        decompose[2],\n        decompose[3],\n        0.5,\n      ].join(',')})`;\n      colors.primary75 = `rgba(${[\n        decompose[1],\n        decompose[2],\n        decompose[3],\n        0.75,\n      ].join(',')})`;\n      colors.primary25 = `rgba(${[\n        decompose[1],\n        decompose[2],\n        decompose[3],\n        0.25,\n      ].join(',')})`;\n    }\n    return (\n      <AsyncSelect\n        cacheOptions\n        defaultValue={defaultOptions}\n        isMulti={multiple || false}\n        loadingMessage={constant('Chargement en cours...')}\n        loadOptions={this.loadOptions}\n        menuPlacement=\"auto\"\n        noOptionsMessage={constant(\n          'Aucun médicament ne correspond à la recherche',\n        )}\n        placeholder=\"Ajouter un médicament au plan de prise\"\n        theme={(theme) => ({\n          ...theme,\n          colors: {\n            ...theme.colors,\n            ...colors,\n          },\n        })}\n        value={select.value}\n        onChange={this.handleSelect}\n      />\n    );\n  }\n}\n\nSearchMedicament.propTypes = {\n  defaultOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      value: PropTypes.string,\n    }),\n  ),\n  multiple: PropTypes.bool,\n  onSelect: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Col, Form, Modal, Row } from \"react-bootstrap\";\nimport ceil from \"lodash/ceil\";\nimport chunk from \"lodash/chunk\";\nimport keys from \"lodash/keys\";\nimport map from \"lodash/map\";\nimport get from \"lodash/get\";\n\nimport { doUpdateSettings } from \"store/plan-prise/actions\";\n\nconst PPSettings = (props) => {\n  const { setShowSettings, showSettings, updateSettings } = props;\n  return (\n    <Modal show={showSettings} onHide={() => setShowSettings(false)}>\n      <Modal.Header closeButton>\n        <Modal.Title>Options</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h5>Colonnes à afficher</h5>\n        <Row>\n          {map(\n            chunk(\n              keys(window.php.default.inputs.posologies.inputs),\n              ceil(window.php.default.inputs.posologies.inputs.length / 2)\n            ),\n            (c) => (\n              <Col key={c.id} sm={6}>\n                {map(c, (key) => {\n                  const input =\n                    window.php.default.inputs.posologies.inputs[key];\n                  return (\n                    <Form.Group key={key} className=\"mb-0\" controlId={key}>\n                      <Form.Check\n                        checked={get(\n                          props,\n                          `settings.inputs.${input.id}.checked`,\n                          input.default || false\n                        )}\n                        label={input.label}\n                        type=\"checkbox\"\n                        onChange={(event) =>\n                          updateSettings(\n                            {\n                              parent: \"inputs\",\n                              id: input.id,\n                            },\n                            {\n                              action: \"check\",\n                              value: event.target.checked,\n                            }\n                          )\n                        }\n                      />\n                    </Form.Group>\n                  );\n                })}\n              </Col>\n            )\n          )}\n        </Row>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nPPSettings.propTypes = {\n  setShowSettings: PropTypes.func,\n  showSettings: PropTypes.bool,\n  updateSettings: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    settings: state.planPrise.settings,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateSettings: (input, value) => dispatch(doUpdateSettings(input, value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PPSettings);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"react-bootstrap\";\nimport map from \"lodash/map\";\n\nimport { doInit } from \"store/plan-prise/actions\";\n\nclass PPSelect extends React.Component {\n  _handleSelect = (event, id) => {\n    event.preventDefault();\n    const { init } = this.props;\n    init(id);\n  };\n\n  render() {\n    const { list } = this.props;\n    return (\n      <div>\n        <div className=\"row text-center\">\n          <div className=\"col-md-6\">\n            <div className=\"list-group\">\n              <Link\n                className=\"list-group-item list-group-item-action list-group-item-success\"\n                to=\"/plan-prise/nouveau\"\n              >\n                Créer un plan de prise\n              </Link>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            {list ? (\n              <div className=\"list-group\">\n                <div\n                  style={{\n                    maxHeight: `${this.lineMax * this.lineHeight}rem`,\n                    overflow: \"scroll\",\n                  }}\n                >\n                  {map(list, (item) => (\n                    <Link\n                      key={item.pp_id}\n                      className=\"list-group-item list-group-item-action\"\n                      to={`/plan-prise/${item.pp_id}`}\n                    >\n                      Plan de prise n°\n                      {item.pp_id}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div>\n                <Spinner />\n                <span className=\"ml-2\">\n                  Chargement de vos plans de prise...\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPPSelect.propTypes = {\n  init: PropTypes.func,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      pp_id: PropTypes.number,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    list: state.planPrise.list,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    init: (id) => dispatch(doInit(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PPSelect);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Col, Container, Row, Spinner } from \"react-bootstrap\";\nimport find from \"lodash/find\";\nimport forEach from \"lodash/forEach\";\nimport get from \"lodash/get\";\nimport map from \"lodash/map\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport {\n  doAddLine,\n  doInit,\n  doLoadList,\n  doReset,\n  doSetLoading,\n} from \"store/plan-prise/actions\";\nimport { doLoad } from \"store/data/actions\";\nimport PPRepository from \"../helpers/PPRepository.helper\";\nimport generate from \"../helpers/pdf.helper\";\n\nimport PPCard from \"./plan-prise/PPCard\";\nimport SearchMedicament from \"./search/SearchMedicament\";\nimport PPSettings from \"./plan-prise/PPSettings\";\nimport PPSelect from \"./plan-prise/PPSelect\";\n\nclass PlanPrise extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSettings: false,\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate() {\n    this.init();\n    if (this.count === 50) {\n      throw Error();\n    } else {\n      this.count = (this.count || 0) + 1;\n    }\n  }\n\n  init = () => {\n    const {\n      content,\n      init,\n      list,\n      load,\n      loadList,\n      match,\n      ppId,\n      repository,\n    } = this.props;\n    const routeId = match.params.id;\n    if (!ppId && routeId) {\n      init(routeId);\n    }\n    if (list === null) {\n      loadList();\n    }\n    if (content) {\n      forEach(content, (medicament) => {\n        if (\n          !repository.isLoaded(medicament) &&\n          !repository.isLoading(medicament)\n        ) {\n          load(medicament);\n        }\n      });\n    }\n  };\n\n  deletePP = async (event) => {\n    event.preventDefault();\n    const { history, ppId, reset, setLoading } = this.props;\n    setLoading({\n      state: true,\n      message: \"Suppression du plan de prise en cours... \",\n    });\n    return axios\n      .delete(`${window.php.routes.api.planprise.destroy}/${ppId}`, {\n        data: {\n          token: window.php.routes.token,\n        },\n      })\n      .then(() => {\n        reset(history);\n      })\n      .catch((error) => {\n        setLoading({\n          state: false,\n          message: \"\",\n        });\n        console.log(\"Error destroying pp\", error);\n      });\n  };\n\n  handleAddLine = async (value) => {\n    const { addLine, history } = this.props;\n    const medicament = {\n      id: value.value,\n      denomination: value.label,\n      type: value.type,\n    };\n    return addLine(medicament, history);\n  };\n\n  generatePDF = () => {\n    const { ppId, repository } = this.props;\n    const { columns, values } = repository;\n\n    return generate(ppId, columns, values);\n  };\n\n  render() {\n    const { content, history, isLoading, ppId, repository, reset } = this.props;\n    const { showSettings } = this.state;\n    return (\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col xl={8}>\n            {ppId && !isLoading.state && (\n              <Button variant=\"link\" onClick={() => reset(history)}>\n                <span className=\"fa fa-arrow-left\" />\n                Retour à la liste\n              </Button>\n            )}\n            <Card>\n              <Card.Header className=\"d-flex\">\n                <div className=\"flex-fill\">\n                  {(() => {\n                    if (ppId === -1) {\n                      return \"Nouveau Plan de Prise\";\n                    }\n                    if (ppId === null) {\n                      return \"Que voulez-vous faire ? \";\n                    }\n                    if (ppId > 0) {\n                      return `Plan de prise n°${ppId}`;\n                    }\n                    return null;\n                  })()}\n                </div>\n                {ppId > 0 && !isLoading.state ? (\n                  <div className=\"d-flex\">\n                    <a className=\"btn text-success py-0\" href={`${ppId}/print`}>\n                      <i className=\"fa fa-print\" />\n                    </a>\n                    <Button\n                      className=\"text-success py-0\"\n                      variant=\"link\"\n                      onClick={() => this.generatePDF()}\n                    >\n                      <i className=\"fa fa-file-pdf\" />\n                    </Button>\n                    <Button\n                      className=\"text-secondary py-0\"\n                      variant=\"link\"\n                      onClick={() => this.setShowSettings(true)}\n                    >\n                      <i className=\"fa fa-cog\" />\n                    </Button>\n                    <Button\n                      className=\"text-danger py-0\"\n                      variant=\"link\"\n                      onClick={this.deletePP}\n                    >\n                      <i className=\"fa fa-trash\" />\n                    </Button>\n                  </div>\n                ) : null}\n              </Card.Header>\n\n              <Card.Body>\n                {(() => {\n                  if (isLoading.state) {\n                    return (\n                      <div>\n                        <Spinner />\n                        <span className=\"ml-3\">{isLoading.message}</span>\n                      </div>\n                    );\n                  }\n                  if (ppId === null) {\n                    return <PPSelect />;\n                  }\n                  return (\n                    <TransitionGroup className=\"plan-prise\" enter={false}>\n                      {content &&\n                        map(content, (medicament) => {\n                          return (\n                            <CSSTransition\n                              key={medicament.id}\n                              classNames=\"plan-prise-card\"\n                              timeout={500}\n                            >\n                              <PPCard\n                                denomination={medicament.denomination}\n                                details={find(repository.valuesObject, [\n                                  \"line\",\n                                  medicament,\n                                ])}\n                                isLoaded={repository.isLoaded(medicament)}\n                                lineId={medicament.id}\n                                needChoice={get(\n                                  repository.needChoice,\n                                  medicament.id,\n                                  []\n                                )}\n                                repository={repository}\n                              />\n                            </CSSTransition>\n                          );\n                        })}\n                      <SearchMedicament\n                        multiple={false}\n                        onSelect={(value) => this.handleAddLine(value)}\n                      />\n                    </TransitionGroup>\n                  );\n                })()}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <PPSettings\n          setShowSettings={(a) => this.setState({ showSettings: a })}\n          showSettings={showSettings}\n        />\n      </Container>\n    );\n  }\n}\n\nPlanPrise.propTypes = {\n  addLine: PropTypes.func,\n  content: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      denomination: PropTypes.string,\n    })\n  ),\n  history: PropTypes.any,\n  init: PropTypes.func,\n  isLoading: PropTypes.shape({\n    message: PropTypes.any,\n    state: PropTypes.any,\n  }),\n  list: PropTypes.any,\n  load: PropTypes.func,\n  loadList: PropTypes.func,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.any,\n    }),\n  }),\n  ppId: PropTypes.number,\n  repository: PropTypes.shape({\n    columns: PropTypes.any,\n    isLoaded: PropTypes.func,\n    isLoading: PropTypes.func,\n    needChoice: PropTypes.bool,\n    values: PropTypes.any,\n    valuesObject: PropTypes.any,\n  }),\n  reset: PropTypes.func,\n  setLoading: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.planPrise.content,\n    customData: state.planPrise.customData,\n    data: state.data.data,\n    isLoading: state.planPrise.isLoading,\n    list: state.planPrise.list,\n    ppId: state.planPrise.pp_id,\n    repository: new PPRepository({\n      content: state.planPrise.content,\n      customData: state.planPrise.customData,\n      data: state.data.data,\n      settings: state.planPrise.settings,\n    }),\n    settings: state.planPrise.settings,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addLine: (medicament, history) => dispatch(doAddLine(medicament, history)),\n    init: (id) => dispatch(doInit(id)),\n    load: (medicament) => dispatch(doLoad(medicament)),\n    loadList: () => dispatch(doLoadList()),\n    reset: (history = null) => dispatch(doReset(history)),\n    setLoading: (values) => dispatch(doSetLoading(values)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(PlanPrise)\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport store from \"store/store\";\nimport Accueil from \"components/app/Accueil\";\nimport Navigation from \"components/app/Navigation\";\nimport Authentification, { Role } from \"components/auth/Authentification\";\nimport ProtectedRoute from \"components/app/ProtectedRoute\";\nimport Profile from \"components/app/Profile\";\nimport PlanPrise from \"components/PlanPrise\";\n\nimport { doRestore } from \"store/auth/actions\";\n\nclass App extends React.Component {\n  constructor(props: any) {\n    super(props);\n    const state = store.getState();\n    if (!state.auth.token) {\n      store.dispatch(doRestore());\n    }\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename=\"/\">\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\">\n              <Accueil />\n            </Route>\n            <Route path=\"/inscription\">\n              <Authentification role={Role.register} />\n            </Route>\n            <Route path=\"/connexion\">\n              <Authentification role={Role.signin} />\n            </Route>\n            <ProtectedRoute path=\"/deconnexion\">\n              <Authentification role={Role.signout} />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/profile\">\n              <Profile />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/plan-prise/:id\">\n              <PlanPrise />\n            </ProtectedRoute>\n            <ProtectedRoute path=\"/plan-prise\">\n              <PlanPrise />\n            </ProtectedRoute>\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nif (document.getElementById(\"root\")) {\n  const root = document.getElementById(\"root\");\n  ReactDOM.render(<App />, root);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}